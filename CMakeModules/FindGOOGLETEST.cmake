

set(GOOGLETEST_ROOT $ENV{GOOGLETEST_ROOT})

if(NOT GOOGLETEST_ROOT)
	set(GOOGLETEST_ROOT $ENV{GOOGLETESTHOME})
endif()

if(NOT GOOGLETEST_ROOT)
	set(GOOGLETEST_ROOT $ENV{GOOGLETEST_DIR})
endif()

if(NOT GOOGLETEST_ROOT)
	set(GOOGLETEST_ROOT $ENV{TACC_GOOGLETEST_DIR})
endif()

message("GOOGLETEST_ROOT  :" ${GOOGLETEST_ROOT})

# Check if we can use PkgConfig
find_package(PkgConfig)

#Determine from PKG
if( PKG_CONFIG_FOUND AND NOT GOOGLETEST_ROOT )
	pkg_check_modules( PKG_FFTW QUIET "hdf5" )
endif()

#Check whether to search static or dynamic libs
set( CMAKE_FIND_LIBRARY_SUFFIXES_SAV ${CMAKE_FIND_LIBRARY_SUFFIXES} )

message("Suffixes"  ${CMAKE_FIND_LIBRARY_SUFFIXES})

if( GOOGLETEST_ROOT )

find_library(
	GOOGLETEST_LIB
	NAMES "libgtest.a" 
	PATHS ${GOOGLETEST_ROOT}
	PATH_SUFFIXES "lib" "lib64"
	NO_DEFAULT_PATH
)

#  find_library(
#    GOOGLETEST_LIB
#    PATHS ${GOOGLETEST_ROOT}/lib
#    NAMES "libhdf5.so"
#    PATH_SUFFIXES "lib" "lib64"
#    NO_DEFAULT_PATH
#  )

#find includes
find_path(
	GOOGLETEST_INCLUDES
	NAMES "gtest"
	PATHS ${GOOGLETEST_ROOT}/include
	PATH_SUFFIXES "include"
	NO_DEFAULT_PATH
)

endif( GOOGLETEST_ROOT )


set(GOOGLETEST_hdf5_LIBRARY_RELEASE ${GOOGLETEST_LIB} )
#set(GOOGLETEST_C_INCLUDE_DIR ${GOOGLETEST_INCLUDES} )
#set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES_SAV} )
set(GOOGLETEST_LIBRARIES ${GOOGLETEST_LIB} )
set(GOOGLETEST_INCLUDE_DIRS ${GOOGLETEST_INCLUDES})

message("GOOGLETEST LIB  :" ${GOOGLETEST_LIBRARIES})
message("GOOGLETEST INCLUDES  :" ${GOOGLETEST_INCLUDES})

include(FindPackageHandleStandardArgs)

find_package_handle_standard_args(GOOGLETEST DEFAULT_MSG GOOGLETEST_INCLUDES GOOGLETEST_LIBRARIES)

mark_as_advanced(GOOGLETEST_C_INCLUDE_DIR GOOGLETEST_hdf5_LIBRARY_REALEASE)



